{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Polaris-Scanner",
          "rules": [
            {
              "id": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
              "name": "Server Error",
              "fullDescription": {
                "text": "Information Leakage is an application weakness where an application reveals sensitive data, such as technical details of the web application, environment, \n    or user-specific data. Sensitive data may be used by an attacker to exploit the target web application, its hosting network, or its users. \n    Therefore, leakage of sensitive data should be limited or prevented whenever possible. Information Leakage, in its most common form, \n    is the result of one or more of the following conditions: \n    - A failure to scrub out HTML/Script comments containing sensitive information\n    - Improper application or server configurations\n    - Differences in page responses for valid versus invalid data.\n\n    A 5XX response code was detected.\n\n    Improper handling of errors can introduce a variety of security problems for a web site. The most common problem is when detailed internal error messages such as stack traces, database dumps, and error codes are displayed to the user (hacker). \n    These messages reveal implementation details that should never be revealed. Such details can provide hackers important clues on potential flaws in the site and such messages are also disturbing to normal users.\n\n    Web applications frequently generate error conditions during normal operation. Out of memory, null pointer exceptions, system call failure, database unavailable, network timeout,and hundreds of other common conditions can cause errors to be generated.\n    These errors must be handled according to a well thought out scheme that will provide a meaningful error message to the user, diagnostic information to the site maintainers, and no useful information to an attacker.\r\n\r\n\n\n**References:**\n\n\n* [OWASP: Improper Error Handling](https://owasp.org/www-community/Improper_Error_Handling)\n* [OWASP WSTG: Testing for Improper Error Handling](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling)"
              }
            },
            {
              "id": "e6492d64-9582-654c-bba8-1a5ba13ee97e",
              "name": "Weak SSL Protocol",
              "fullDescription": {
                "text": "Your web application currently supports TLS protocols older than TLS 1.3 which are no longer considered cryptographically secure.  Due to the possibility of an attacker downgrading the protocol version used in the SSL/TLS session, it is important to discontinue the usage of cryptographically weak SSL/TLS versions. This is highly important even if your application supports TLS 1.3 and newer. Downgrade attacks can lead to the alteration of the TLS handshake messages in a manner that results in the usage of an older SSL/TLS protocol version. If successful, the downgrade attack will ensure that a cryptographically broken protocol is used, while the connecting client and server believe their connection is secure.\n\nIn addition, legacy SSL/TLS clients may by default attempt to connect using weaker protocol versions completely eliminating the need for an attacker to downgrade a connection.  Supporting broken protocols risks the confidentiality, integrity, and non-repudiation elements that are expected by TLS connections.\r\n\r\nWeaknesses in TLS connections may allow an attacker to decrypt traffic passed between a victim's client and the server. Any sensitive information passed over this connection may be exposed, such as credentials, account data, personally identifiable information (PII), financial records, etc. Exposure of session identifiers may allow an attacker to hijack a victim's session and impersonate the victim in the application. An attacker who decrypts traffic in transit between a victim's client and the server may also modify data in transit, allowing them to modify requests the victim has initiated, and any data being returned to the client.\n\nNote: Most modern browsers will display a warning instead of showing the page when attempting to connect to a server over TLS versions older than 1.3.\n\n**References:**\n\n\n* [Mozilla: Security/Server Side TLS](https://wiki.mozilla.org/Security/Server_Side_TLS)\n* [Mozilla: SSL Configuration Generator](https://ssl-config.mozilla.org/)\n* [Sweet32: Birthday attacks on 64-bit block ciphers in TLS and OpenVPN](https://sweet32.info/)"
              }
            },
            {
              "id": "8547d027-57f0-26ea-738f-6af6b3a6e685",
              "name": "Unsecured Session Cookie",
              "fullDescription": {
                "text": "The application fails to set the 'Secure' attribute on one or more cookies, which exposes them to attacks on insecure network communication. If the 'Secure' attribute is set on a cookie, the browser sends the cookie over encrypted HTTPS connections, and not over HTTP. The 'Secure' attribute helps prevent cookies from being stolen by attackers on the same network as victims; cookies without this attribute can be stolen.\n\nIf this attribute is not set, the browser sends the cookie to the vulnerable site along with all HTTP requests to that site. An attacker that can sniff traffic between the victim and the server can steal the sensitive cookies.\n\nThe 'Secure' attribute needs to be set even if the vulnerable site only serves content over HTTPS and does not listen for HTTP traffic. An attacker on the same LAN as the victim can inject arbitrary content into any page from another site that is served over plain-text HTTP. For example, an attacker can inject content such as the following into any plain-text HTTP response:\n\n```\n<img src=\"http://vulnerable.example.com/\">\n```\n\nThe victim's browser sends a plain-text HTTP request for http://vulnerable.example.com/, including the victim's cookie, which can be compromised by a man-in-the-middle attacker as the data is sent unencrypted.\r\n\r\nIf the 'Secure' attribute is not set on a cookie, the cookie may be sent over unencrypted connections and can be stolen by an attacker with access to the network path. If the cookie contains the victim's session identifier, then the attacker can steal the victim's session.\n\n**References:**\n\n\n* [Secure Cookie Attribute](https://owasp.org/www-community/controls/SecureCookieAttribute)"
              }
            },
            {
              "id": "1db4e0f5-8070-0258-79c5-189ee7261a83",
              "name": "Missing X-Content-Type-Options Header",
              "fullDescription": {
                "text": "The application server does not set the \"X-Content-Type-Options\" header in HTTP responses. The X-Content-Type-Options header mechanism prevents a web browser from overriding the MIME type indicated in the application's Content-Type response header.\n\nMost modern browsers can inspect application responses through \"MIME sniffing\" and determine if the correct Content-Type is specified by the application server. When the X-Content-Type-Options header is specified by an application, browsers will not perform MIME sniffing and will trust the Content-Type specified by the application.\n\nApplications that do not set the X-Content-Type-Options header \"nosniff\" directive explicitly in the application response are more susceptible to MIME Confusion attacks. A MIME confusion attack occurs when an application resource does not provide sufficient metadata to the web browser about the response's content type. In a normal scenario where MIME sniffing is allowed, the web browser sniffs the content of a response to determine which MIME type should be used. Once the web browser has completed its analysis of the response, it compares what is found against the server provided content type header (if present). If the browser detects a mismatched content type, the browser uses the MIME type that it determined on its own.\n\nFor example, consider an application that allows users to upload JPG image files to the server. In this scenario, an attacker may be able to upload a malicious image file where the content of the file is valid HTML or JavaScript. When the uploaded file is returned in the application response, the browser may sniff the content of the malicious file and determine its MIME type to be HTML or JavaScript. When the malicious image file is rendered by the browser, instead of displaying an image, the attacker's malicious HTML or JavaScript is executed.\r\n\r\nEnabled content sniffing makes MIME Confusion attacks possible which, in their turn, lead to cross-site scripting (XSS). Using an XSS, an attacker can arbitrarily alter page content displayed to the victim and can execute application functions using the victim's application identity if the victim is authenticated to the application."
              }
            },
            {
              "id": "8c2fb339-1364-7ae6-2abd-36c638b6f681",
              "name": "Missing CSP",
              "fullDescription": {
                "text": "The application server does not set the Content-Security-Policy (CSP) header in HTTP responses, and therefore does not benefit from the additional protection against potential cross-site scripting issues and other browser-based vulnerabilities that a properly configured CSP may provide. \n\nThe CSP instructs the browser to only load and render trusted resources  specified in the header. A compliant browser will deny loading any resources (such as scripts, images, or objects) not listed in the policy.\n\nCSP has evolved over time and has introduced new security controls. Each introduced control provides improved protection capabilities, here are the fundamental details:\n\n* Level 1 - Initial version, mainly based around allow-list, but proven to be difficult to use securely in practice\n* Level 2 - Introduced  the ability to designate trusted third-party and inline-scripts with a nonce value, rejecting other scripts without the valid nonce\n* Level 3 - Introduced 'strict-dynamic' which enabled easier deployments by dynamically propagating trust from specific root scripts (designated with a nonce or a hash) to any additional scripts loaded by these trusted scripts\n\nCSP allows browsers to differentiate between trusted and untrusted content requested by the page. By default, it also prohibits inline script execution, as well as dynamic script evaluation. A CSP adds an additional line of defense and reduces the overall security risk.\r\n\r\nA missing Content-Security-Policy means that the application will not benefit from the extra protection that it could provide, thereby making the application more vulnerable to exploitation of any existing security issues.\n\n**References:**\n\n\n* [Content Security Policy](https://owasp.org/www-community/controls/Content_Security_Policy)\n* [Content Security Policy Level 2](https://www.w3.org/TR/CSP2/)\n* [Content Security Policy \\(CSP\\)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP)"
              }
            },
            {
              "id": "835a7f9e-6c76-bb6f-70fa-84a5dfef2845",
              "name": "Cookie with Improper SameSite Attribute",
              "fullDescription": {
                "text": "The \"SameSite\" attribute is not set, or an insecure value is used, on cookies containing sensitive information. This attribute can be set as part of a Set-Cookie header to prevent the browser from sending this cookie along with cross-site requests. The primary purpose of this control is to reduce the possibility of cross-site request forgery (CSRF) attacks, although it should be seen as a complementary defense in depth mechanism rather than the primary defense against CSRF attacks.\n\nThe \"SameSite\" cookie attribute supports three different values:\n\n* None - cookies for the site are always sent with requests. This is the default behavior in older browsers and provides no protection against CSRF. Note that cookies without the \"Secure\" attribute will be blocked from setting \"SameSite=None\" by browsers.\n* Lax - cookies for the site will normally not be sent on cross-site requests, but will be included for top-level navigation (e.g., when a user clicks on a link from a different site). This is the default behavior in recent versions of some modern browsers, such as Chrome and Edge, and provides limited protection against some CSRF attacks.\n* Strict -  cookies for the site will only be included with same-site requests, and never included with cross-site requests. This is the most secure setting of the three but may have some negative impact on user experience, e.g., cross-site navigation to a site where the user has already logged in will still appear to the user as if they were not authenticated.\r\n\r\nIf the \"SameSite\" attribute is not set on a cookie, or the value is set to \"None\", the cookie may be sent by the browser in any cross-site requests and could therefore cause a victim's browser to submit the cookie with requests that execute sensitive actions without the user's knowledge in the event of cross-site request forgery attacks on the application.\n\n**References:**\n\n\n* [SameSite](https://owasp.org/www-community/SameSite)"
              }
            },
            {
              "id": "fd9fd5d9-ed74-8801-7ba1-da5508acc204",
              "name": "Cookie with Improper SameSite Attribute",
              "fullDescription": {
                "text": "The \"SameSite\" attribute is not set, or an insecure value is used, on cookies containing sensitive information. This attribute can be set as part of a Set-Cookie header to prevent the browser from sending this cookie along with cross-site requests. The primary purpose of this control is to reduce the possibility of cross-site request forgery (CSRF) attacks, although it should be seen as a complementary defense in depth mechanism rather than the primary defense against CSRF attacks.\n\nThe \"SameSite\" cookie attribute supports three different values:\n\n* None - cookies for the site are always sent with requests. This is the default behavior in older browsers and provides no protection against CSRF. Note that cookies without the \"Secure\" attribute will be blocked from setting \"SameSite=None\" by browsers.\n* Lax - cookies for the site will normally not be sent on cross-site requests, but will be included for top-level navigation (e.g., when a user clicks on a link from a different site). This is the default behavior in recent versions of some modern browsers, such as Chrome and Edge, and provides limited protection against some CSRF attacks.\n* Strict -  cookies for the site will only be included with same-site requests, and never included with cross-site requests. This is the most secure setting of the three but may have some negative impact on user experience, e.g., cross-site navigation to a site where the user has already logged in will still appear to the user as if they were not authenticated.\r\n\r\nIf the \"SameSite\" attribute is not set on a cookie, or the value is set to \"None\", the cookie may be sent by the browser in any cross-site requests and could therefore cause a victim's browser to submit the cookie with requests that execute sensitive actions without the user's knowledge in the event of cross-site request forgery attacks on the application.\n\n**References:**\n\n\n* [SameSite](https://owasp.org/www-community/SameSite)"
              }
            },
            {
              "id": "dd598b11-bb5b-3beb-cee6-7d8b73e62f32",
              "name": "Missing Cache Control Header",
              "fullDescription": {
                "text": "The application is not utilizing Cache-Control header, which can lead to sensitive data being cached by the browser.\r\n\r\n"
              }
            },
            {
              "id": "f39f61ca-6116-dfbd-e2c9-dee7bd4208f5",
              "name": "Weak Ciphers",
              "fullDescription": {
                "text": "The server-side SSL/TLS endpoint is configured to allow weak SSL/TLS cipher suites. These cipher suites have proven cryptographic flaws that can allow an attacker to decrypt or modify traffic.\n\nWeak cipher suites include examples such as the following:\n\n* Cipher suites that use RC4 for encryption; RC4 contains several known weaknesses. In particular, an attacker that can gather a large number of ciphertexts that contain the same plaintext encrypted using different keys may be able to recover the plaintext (the typical target of this attack would be a cookie that is sent in multiple SSL/TLS sessions).\n* Cipher suites that use block ciphers (e.g. AES, 3DES) in CBC mode; these have been shown to be vulnerable to various forms of the POODLE attack that targets the padding and/or MAC calculation, as well as the LUCKY13 timing attack. They are also vulnerable to the BEAST attack if SSL 3.0 or TLS 1.0 are supported. BEAST allows an attacker on the same network as an end-user, who can inject code into any site open in the user's browser, to decrypt cookies (or other sensitive data that is part of each request) for the vulnerable site.\n* Cipher suites that use the DES block cipher; these cipher suites use 56-bit keys for encryption, which are brute-forcible.\n* EXPORT-strength cipher suites use encryption key lengths that are vulnerable to brute force attacks (40 bits or 56 bits for symmetric key algorithms and 512 bits for the RSA asymmetric key algorithm). Note that even if stronger algorithms are preferred by the server, having EXPORT-strength cipher suites enabled is dangerous due to attacks like FREAK and Logjam.\n* Cipher suites with NULL for encryption do not offer any encryption for the connection.\n* Anonymous Diffie-Hellman cipher suites do not authenticate the endpoints and are vulnerable to man-in-the-middle attackers that can perform active attacks to read/modify traffic.\n* Cipher suites that support the use of older block ciphers, such as 3DES, use a block size of 64-bits. These short block sizes provide for the basis of the Sweet32 vulnerability. This vulnerability allows attackers monitoring long-lived SSL/TLS connections, for collision in encrypted blocks, to retrieve enough data to identify encrypted information.\n* Cipher suites that support only the RSA Key Exchange using the RSA PKCS#1 v1.5 encryption standard are vulnerable to the ROBOT(Return Of Bleichenbacher's Oracle Threat). The issue can ultimately allow an attacker to disclose a secured website's private key in a relatively short amount of time; the disclosure is possible by repeatedly issuing specially crafted packets to vulnerable servers. Attackers who obtain private keys can impersonate valid web sites and endpoints. Additionally, the decryption of sensitive information is possible.\r\n\r\nA server-side SSL/TLS endpoint that supports weak ciphers could allow an attacker to read or modify traffic sent in SSL/TLS connections with that endpoint.\n\n**References:**\n\n\n* [Mozilla: Security/Server Side TLS](https://wiki.mozilla.org/Security/Server_Side_TLS)\n* [Mozilla: SSL Configuration Generator](https://ssl-config.mozilla.org/)\n* [OWASP Cheat Sheet Series: Transport Layer Protection Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html#Rule_-_Only_Support_Strong_Cryptographic_Ciphers)"
              }
            },
            {
              "id": "fa060593-4f5e-cf22-930e-4d8fb0cca6f0",
              "name": "Unsafe Methods Allowed",
              "fullDescription": {
                "text": "Insecure HTTP methods are enabled on the web server. This may allow an attacker to abuse these methods to perform various attacks, such as uploading or deleting files from the server.\n\nThe most common HTTP methods were specified in HTTP 1.0 (GET, POST, and HEAD), while the HTTP 1.1 specification defined 5 more (OPTIONS, PUT, DELETE, TRACE and CONNECT).\n\nThe following HTTP methods may constitute security issues:\n\n* PUT may allow a remote user to upload a file to the web server. If the uploaded file already exists, then it will be overwritten. \n* DELETE may allow a remote user to remove files from the web server.\n* CONNECT can allow a remote user to use the web server as an HTTP proxy.\n* TRACE can be used to echo an HTTP request and associated headers back to the client making the request. This is often used to perform diagnostics on a web server.\n\n**Note**: The OPTIONS method enumerates the HTTP methods that are supported by the HTTP server and in some cases may be required for an application to function properly.  Enabling this HTTP method is generally not considered to be a security risk.\r\n\r\nInsecure HTTP methods enabled on the server may allow an attacker to perform a variety of attacks by modifying server resources and using the server to extract sensitive information. Depending on the actual configuration, the insecure HTTP methods could potentially be abused as follows: \n\n* PUT may allow an attacker to upload new files to or modify existing files on the server in an attempt to serve malware to victims or render pages in a victim's browser that are under the attacker's control.\n* DELETE may allow an attacker to deny users access to legitimate resources by removing resources from the server.\n* An attacker can use CONNECT to proxy their traffic through the web server, to perform reconnaissance on, or attack, another site, as if the attack originated from your web server, obfuscating the attacker's true origin.\n* An attacker may be able to use TRACE to view sensitive headers added by reverse proxies in front of the web server.\n\n**References:**\n\n\n* [OWASP WSTG: Test HTTP Methods](https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/06-Test_HTTP_Methods)"
              }
            },
            {
              "id": "d5dafa57-b51e-22a8-5889-9726cbc7534f",
              "name": "Non-HttpOnly Session Cookie",
              "fullDescription": {
                "text": "The \"HttpOnly\" flag is not set on cookies containing sensitive information. The HttpOnly flag is an attribute set as part of a Set-Cookie header to prevent the cookie's value from being read or set by client-side JavaScript in browsers. Without the HttpOnly attribute, the cookie's value can be accessed by client-side scripts like JavaScript.\r\n\r\nFailing to set the HttpOnly flag on a cookie containing sensitive information will leave it exposed to client-side scripts and could therefore lead to its compromise in the event of a cross-site scripting attack on the application. If a session cookie is missing this flag, it can also make a session compromise easier to perform during a cross-site scripting attack since the attacker can obtain a copy of the session cookie. \n\nNote that the HttpOnly flag is not a protection against session hijacking or cross-site scripting attacks in general, it will only prevent specific attacks that rely on the ability to read cookie values from client-side scripts.\n\n**References:**\n\n\n* [Mitigating Cross-site Scripting With HTTP-only Cookies](https://docs.microsoft.com/en-us/previous-versions//ms533046\\(v=vs.85\\))\n* [HttpOnly](https://owasp.org/www-community/HttpOnly)"
              }
            },
            {
              "id": "b4b0ee5c-2288-a837-2ce4-afe3c2390ee0",
              "name": "Non-HttpOnly Session Cookie",
              "fullDescription": {
                "text": "The \"HttpOnly\" flag is not set on cookies containing sensitive information. The HttpOnly flag is an attribute set as part of a Set-Cookie header to prevent the cookie's value from being read or set by client-side JavaScript in browsers. Without the HttpOnly attribute, the cookie's value can be accessed by client-side scripts like JavaScript.\r\n\r\nFailing to set the HttpOnly flag on a cookie containing sensitive information will leave it exposed to client-side scripts and could therefore lead to its compromise in the event of a cross-site scripting attack on the application. If a session cookie is missing this flag, it can also make a session compromise easier to perform during a cross-site scripting attack since the attacker can obtain a copy of the session cookie. \n\nNote that the HttpOnly flag is not a protection against session hijacking or cross-site scripting attacks in general, it will only prevent specific attacks that rely on the ability to read cookie values from client-side scripts.\n\n**References:**\n\n\n* [Mitigating Cross-site Scripting With HTTP-only Cookies](https://docs.microsoft.com/en-us/previous-versions//ms533046\\(v=vs.85\\))\n* [HttpOnly](https://owasp.org/www-community/HttpOnly)"
              }
            },
            {
              "id": "d9bc3738-251e-462e-b397-1d9e4094bfb9",
              "name": "Fingerprinting",
              "fullDescription": {
                "text": "The most common methodology for attackers is to begin by getting the target's web presence \"footprint\" and enumerating as much information as possible -- e.g. the target's platform, web application software technology, backend database version, configurations and possibly even their network architecture/topology. With this information, the attacker may develop an accurate attack scenario, which will effectively exploit a vulnerability in the software type/version being utilized by the target host.\n\nThe goal of Fingerprinting is to determine what technologies are being utilized or exposed via the application, and specifically what version of software is available to the attacker. Once the technology and version are determined the attacker can review known vulnerabilities based on that data. Therefore, it is critical to limit the exposure of information as to what software version is being utilized and, when possible, what software/technology. Be aware that some configuration changes would require a restart of the server for the implementation to take effect.\r\n\r\n\n\n**References:**\n\n\n* [OWASP: WSTG - Information Gathering](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/01-Information_Gathering/)\n* [WASC](http://projects.webappsec.org/w/page/13246925/Fingerprinting)\n* [CAPEC-170: Web Application Fingerprinting](https://capec.mitre.org/data/definitions/170.html)"
              }
            },
            {
              "id": "e7dd172b-32c0-8d0c-e2c5-a03b6eced211",
              "name": "Crawl Report",
              "fullDescription": {
                "text": "Found URLs: <br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift#/instance/51802893/509188de-e424-4a43-a7cb-c5a4b52bf15c`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift#/instance/51802893/d1885d8d-0d6c-46c7-97db-93e89d79ba0f`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/#/instance-selection`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/authentication/keepAlive`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/authorization/parties/current?returnPartyObject=true`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/jsonschema/model`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/layouts/form`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/layoutsets`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/layoutsettings/form`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/apotekkonsesjon-Egenerklaering-attester?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/driftskonsesjon_nyttEllerFlyttet_bevegelseshemmede?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/driftskonsesjon_nyttEllerFlyttet_diskresjon?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/driftskonsesjon_nyttEllerFlyttet_tegningApotekanlegg?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/farmasoeytautorisasjon?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/filialstatus-begrunnelse?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/filialstatus-soeknadenGjelder?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/ja-nei?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/kommuner?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/ombyggingAvApotek-tegningApotekanlegg?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/soeknadstype-melding?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/soeknadstype-soeknad?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/options/testmiljoe?language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/ruleconfiguration/form`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/rulehandler/form`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/v1/applicationlanguages`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/v1/applicationmetadata`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/v1/applicationsettings`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/v1/footer`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/v1/parties?allowedtoinstantiatefilter=true`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/v1/profile/user`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/v1/texts/nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/api/validationconfig/model`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/42e94800-9913-4bf1-b4b3-0140ac1d098d`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/4a557fd3-0ac8-4a9c-8d6e-2bbb8010100d`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/4a557fd3-0ac8-4a9c-8d6e-2bbb8010100d/`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/4a557fd3-0ac8-4a9c-8d6e-2bbb8010100d/process`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/509188de-e424-4a43-a7cb-c5a4b52bf15c`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/509188de-e424-4a43-a7cb-c5a4b52bf15c/`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/509188de-e424-4a43-a7cb-c5a4b52bf15c/data/0c2e65b0-0e66-43ba-b03d-c826d547feb1?includeRowId=true&language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/509188de-e424-4a43-a7cb-c5a4b52bf15c/process`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/509188de-e424-4a43-a7cb-c5a4b52bf15c/validate?language=nb&onlyIncrementalValidators=true`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/active`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/d1885d8d-0d6c-46c7-97db-93e89d79ba0f`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/d1885d8d-0d6c-46c7-97db-93e89d79ba0f/`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/d1885d8d-0d6c-46c7-97db-93e89d79ba0f/data/91383d04-f221-4225-befa-7fd318df1b0d?includeRowId=true&language=nb`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/d1885d8d-0d6c-46c7-97db-93e89d79ba0f/process`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances/51802893/d1885d8d-0d6c-46c7-97db-93e89d79ba0f/validate?language=nb&onlyIncrementalValidators=true`<br>`https://slv.apps.tt02.altinn.no/slv/apotekdrift/instances?instanceOwnerPartyId=51802893&language=nb`<br>"
              }
            }
          ]
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "POLARIS",
            "uriBaseId": "SRCROOT"
          },
          "sourceLanguage": "python"
        }
      ],
      "results": [
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "5a2ae4c1-4a3b-9291-6fc9-0f2c42bb6ce6",
          "ruleIndex": 0,
          "message": {
            "text": "Server Error"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "e6492d64-9582-654c-bba8-1a5ba13ee97e",
          "ruleIndex": 1,
          "message": {
            "text": "Weak SSL Protocol"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "8547d027-57f0-26ea-738f-6af6b3a6e685",
          "ruleIndex": 2,
          "message": {
            "text": "Unsecured Session Cookie"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "1db4e0f5-8070-0258-79c5-189ee7261a83",
          "ruleIndex": 3,
          "message": {
            "text": "Missing X-Content-Type-Options Header"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "8c2fb339-1364-7ae6-2abd-36c638b6f681",
          "ruleIndex": 4,
          "message": {
            "text": "Missing CSP"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "835a7f9e-6c76-bb6f-70fa-84a5dfef2845",
          "ruleIndex": 5,
          "message": {
            "text": "Cookie with Improper SameSite Attribute"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "fd9fd5d9-ed74-8801-7ba1-da5508acc204",
          "ruleIndex": 6,
          "message": {
            "text": "Cookie with Improper SameSite Attribute"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "dd598b11-bb5b-3beb-cee6-7d8b73e62f32",
          "ruleIndex": 7,
          "message": {
            "text": "Missing Cache Control Header"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "f39f61ca-6116-dfbd-e2c9-dee7bd4208f5",
          "ruleIndex": 8,
          "message": {
            "text": "Weak Ciphers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "fa060593-4f5e-cf22-930e-4d8fb0cca6f0",
          "ruleIndex": 9,
          "message": {
            "text": "Unsafe Methods Allowed"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "fa060593-4f5e-cf22-930e-4d8fb0cca6f0",
          "ruleIndex": 9,
          "message": {
            "text": "Unsafe Methods Allowed"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "fa060593-4f5e-cf22-930e-4d8fb0cca6f0",
          "ruleIndex": 9,
          "message": {
            "text": "Unsafe Methods Allowed"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "fa060593-4f5e-cf22-930e-4d8fb0cca6f0",
          "ruleIndex": 9,
          "message": {
            "text": "Unsafe Methods Allowed"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "fa060593-4f5e-cf22-930e-4d8fb0cca6f0",
          "ruleIndex": 9,
          "message": {
            "text": "Unsafe Methods Allowed"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "fa060593-4f5e-cf22-930e-4d8fb0cca6f0",
          "ruleIndex": 9,
          "message": {
            "text": "Unsafe Methods Allowed"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "d5dafa57-b51e-22a8-5889-9726cbc7534f",
          "ruleIndex": 10,
          "message": {
            "text": "Non-HttpOnly Session Cookie"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "b4b0ee5c-2288-a837-2ce4-afe3c2390ee0",
          "ruleIndex": 11,
          "message": {
            "text": "Non-HttpOnly Session Cookie"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "d9bc3738-251e-462e-b397-1d9e4094bfb9",
          "ruleIndex": 12,
          "message": {
            "text": "Fingerprinting"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "e7dd172b-32c0-8d0c-e2c5-a03b6eced211",
          "ruleIndex": 13,
          "message": {
            "text": "Crawl Report"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "POLARIS",
                  "uriBaseId": "SRCROOT",
                  "index": 0
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        }
      ]
    }
  ]
}